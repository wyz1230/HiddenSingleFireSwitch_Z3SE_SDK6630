// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef __AF_GEN_EVENT__
#define __AF_GEN_EVENT__


// Code used to configure the cluster event mechanism
#define EMBER_AF_GENERATED_EVENT_CODE \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl1; \
  EmberEventControl emberAfOtaBootloadClusterClientTickCallbackControl1; \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl2; \
  extern EmberEventControl appPowerOnDelayInitEventControl; \
  extern EmberEventControl appPowerOnOperationControl; \
  extern EmberEventControl app_IdentifyDeviceControl; \
  extern EmberEventControl buttonsAppTimerEventControl; \
  extern EmberEventControl buttonsDriverButtonTaskEventControl; \
  extern EmberEventControl coordinatorManufaIdentifyStepProEventControl; \
  extern EmberEventControl delaySyncStatusControl; \
  extern EmberEventControl emberAfPluginNetworkSteeringFinishSteeringEventControl; \
  extern EmberEventControl emberAfPluginOtaStorageSimpleEepromPageEraseEventControl; \
  extern EmberEventControl emberAfPluginReportingTickEventControl; \
  extern EmberEventControl emberAfPluginScanDispatchScanEventControl; \
  extern EmberEventControl emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventControl; \
  extern EmberEventControl ledsAppTimerEventControl; \
  extern EmberEventControl ledsDriverLedTaskEventControl; \
  extern EmberEventControl loadLightIndicateControl; \
  extern EmberEventControl networkActionPollingEventControl; \
  extern EmberEventControl relayControlTaskEventControl; \
  extern EmberEventControl scenesTransitionEventControl; \
  extern void appPowerOnDelayInitEventHandler(void); \
  extern void appPowerOnOperationHandler(void); \
  extern void app_IdentifyDeviceEventHandler(void); \
  extern void buttonsAppTimerEventHandler(void); \
  extern void buttonsDriverButtonTaskEventHandler(void); \
  extern void coordinatorManufaIdentifyStepProEventHandler(void); \
  extern void delaySyncStatusHandler(void); \
  extern void emberAfPluginNetworkSteeringFinishSteeringEventHandler(void); \
  extern void emberAfPluginOtaStorageSimpleEepromPageEraseEventHandler(void); \
  extern void emberAfPluginReportingTickEventHandler(void); \
  extern void emberAfPluginScanDispatchScanEventHandler(void); \
  extern void emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventHandler(void); \
  extern void ledsAppTimerEventHandler(void); \
  extern void ledsDriverLedTaskEventHandler(void); \
  extern void loadLightIndicateHandler(void); \
  extern void networkActionPollingEventHandler(void); \
  extern void relayControlTaskEventHandler(void); \
  extern void scenesTransitionEventHandler(void); \
  static void networkEventWrapper(EmberEventControl *control, EmberAfNetworkEventHandler handler, uint8_t networkIndex) \
  { \
    emberAfPushNetworkIndex(networkIndex); \
    emberEventControlSetInactive(*control); \
    (*handler)(); \
    emberAfPopNetworkIndex(); \
  } \
  EmberEventControl emberAfPluginEndDeviceSupportMoveNetworkEventControls[1]; \
  extern void emberAfPluginEndDeviceSupportMoveNetworkEventHandler(void); \
  void emberAfPluginEndDeviceSupportMoveNetworkEventWrapper0(void) { networkEventWrapper(&emberAfPluginEndDeviceSupportMoveNetworkEventControls[0], emberAfPluginEndDeviceSupportMoveNetworkEventHandler, 0); } \
  EmberEventControl emberAfPluginEndDeviceSupportPollingNetworkEventControls[1]; \
  extern void emberAfPluginEndDeviceSupportPollingNetworkEventHandler(void); \
  void emberAfPluginEndDeviceSupportPollingNetworkEventWrapper0(void) { networkEventWrapper(&emberAfPluginEndDeviceSupportPollingNetworkEventControls[0], emberAfPluginEndDeviceSupportPollingNetworkEventHandler, 0); } \
  static void clusterTickWrapper(EmberEventControl *control, EmberAfTickFunction callback, uint8_t endpoint) \
  { \
    emberAfPushEndpointNetworkIndex(endpoint); \
    emberEventControlSetInactive(*control); \
    (*callback)(endpoint); \
    emberAfPopNetworkIndex(); \
  } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallback, 1); } \
  void emberAfOtaBootloadClusterClientTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfOtaBootloadClusterClientTickCallbackControl1, emberAfOtaBootloadClusterClientTickCallback, 1); } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction2(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl2, emberAfIdentifyClusterServerTickCallback, 2); } \


// EmberEventData structs used to populate the EmberEventData table
#define EMBER_AF_GENERATED_EVENTS   \
  { &emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallbackWrapperFunction1 }, \
  { &emberAfOtaBootloadClusterClientTickCallbackControl1, emberAfOtaBootloadClusterClientTickCallbackWrapperFunction1 }, \
  { &emberAfIdentifyClusterServerTickCallbackControl2, emberAfIdentifyClusterServerTickCallbackWrapperFunction2 }, \
  { &appPowerOnDelayInitEventControl, appPowerOnDelayInitEventHandler }, \
  { &appPowerOnOperationControl, appPowerOnOperationHandler }, \
  { &app_IdentifyDeviceControl, app_IdentifyDeviceEventHandler }, \
  { &buttonsAppTimerEventControl, buttonsAppTimerEventHandler }, \
  { &buttonsDriverButtonTaskEventControl, buttonsDriverButtonTaskEventHandler }, \
  { &coordinatorManufaIdentifyStepProEventControl, coordinatorManufaIdentifyStepProEventHandler }, \
  { &delaySyncStatusControl, delaySyncStatusHandler }, \
  { &emberAfPluginNetworkSteeringFinishSteeringEventControl, emberAfPluginNetworkSteeringFinishSteeringEventHandler }, \
  { &emberAfPluginOtaStorageSimpleEepromPageEraseEventControl, emberAfPluginOtaStorageSimpleEepromPageEraseEventHandler }, \
  { &emberAfPluginReportingTickEventControl, emberAfPluginReportingTickEventHandler }, \
  { &emberAfPluginScanDispatchScanEventControl, emberAfPluginScanDispatchScanEventHandler }, \
  { &emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventControl, emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventHandler }, \
  { &ledsAppTimerEventControl, ledsAppTimerEventHandler }, \
  { &ledsDriverLedTaskEventControl, ledsDriverLedTaskEventHandler }, \
  { &loadLightIndicateControl, loadLightIndicateHandler }, \
  { &networkActionPollingEventControl, networkActionPollingEventHandler }, \
  { &relayControlTaskEventControl, relayControlTaskEventHandler }, \
  { &scenesTransitionEventControl, scenesTransitionEventHandler }, \
  { &emberAfPluginEndDeviceSupportMoveNetworkEventControls[0], emberAfPluginEndDeviceSupportMoveNetworkEventWrapper0 }, \
  { &emberAfPluginEndDeviceSupportPollingNetworkEventControls[0], emberAfPluginEndDeviceSupportPollingNetworkEventWrapper0 }, \


#define EMBER_AF_GENERATED_EVENT_STRINGS   \
  "Identify Cluster Server EP 1",  \
  "Over the Air Bootloading Cluster Client EP 1",  \
  "Identify Cluster Server EP 2",  \
  "App power on delay init event control",  \
  "App power on operation control",  \
  "App_ identify device control",  \
  "Buttons app timer event control",  \
  "Buttons driver button task event control",  \
  "Coordinator manufa identify step pro event control",  \
  "Delay sync status control",  \
  "Network Steering Plugin FinishSteering",  \
  "OTA Simple Storage EEPROM Driver Plugin PageErase",  \
  "Reporting Plugin Tick",  \
  "Scan Dispatch Plugin Scan",  \
  "Update TC Link Key Plugin BeginTcLinkKeyUpdate",  \
  "Leds app timer event control",  \
  "Leds driver led task event control",  \
  "Event data",  \
  "Network action polling event control",  \
  "Relay control task event control",  \
  "Scenes transition event control",  \
  "End Device Support Plugin Move NWK 0", \
  "End Device Support Plugin Polling NWK 0", \


// The length of the event context table used to track and retrieve cluster events
#define EMBER_AF_EVENT_CONTEXT_LENGTH 3

// EmberAfEventContext structs used to populate the EmberAfEventContext table
#define EMBER_AF_GENERATED_EVENT_CONTEXT { 0x1, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl1}, \
{ 0x1, 0x19, true, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOtaBootloadClusterClientTickCallbackControl1}, \
{ 0x2, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl2}


#endif // __AF_GEN_EVENT__
